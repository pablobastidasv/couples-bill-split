// Mocks generated by Mockito 5.3.2 from annotations
// in couple_budget_calculator/test/budget/calculator/controller/participants_contribution_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:couple_budget_calculator/budget/calculator/application/calculate_contribution_main_group.dart'
    as _i5;
import 'package:couple_budget_calculator/budget/calculator/domain/models.dart'
    as _i4;
import 'package:couple_budget_calculator/budget/calculator/infrastructure/persistence/repository.dart'
    as _i2;
import 'package:decimal/decimal.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRepository_0 extends _i1.SmartFake implements _i2.Repository {
  _FakeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i2.Repository {
  @override
  _i3.Future<void> save(_i4.Group? group) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [group],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<_i4.Group?> findByName(String? groupName) => (super.noSuchMethod(
        Invocation.method(
          #findByName,
          [groupName],
        ),
        returnValue: _i3.Future<_i4.Group?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.Group?>.value(),
      ) as _i3.Future<_i4.Group?>);
}

/// A class which mocks [CalculateContributionInMainGroup].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalculateContributionInMainGroup extends _i1.Mock
    implements _i5.CalculateContributionInMainGroup {
  @override
  _i2.Repository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.Repository);
  @override
  _i3.Future<List<_i5.Contribution>> splitBill(_i6.Decimal? totalBill) =>
      (super.noSuchMethod(
        Invocation.method(
          #splitBill,
          [totalBill],
        ),
        returnValue:
            _i3.Future<List<_i5.Contribution>>.value(<_i5.Contribution>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.Contribution>>.value(<_i5.Contribution>[]),
      ) as _i3.Future<List<_i5.Contribution>>);
}
